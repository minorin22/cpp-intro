(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{254:function(a,t,s){"use strict";s.r(t);var n=s(0),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"デバッガー"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#デバッガー"}},[a._v("#")]),a._v(" デバッガー")]),a._v(" "),s("p",[a._v("読者は複雑なコードを書く際に間違ったコードを書くことだろう。間違ったコードは直せばよい。問題はどこが間違っているのかわからない場合だ。")]),a._v(" "),s("p",[a._v("例えば以下のコードは"),s("code",[a._v("1")]),a._v("から"),s("code",[a._v("10")]),a._v("までの整数を標準出力するはずのプログラムだ。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("しかし実際に実行してみると、"),s("code",[a._v("1")]),a._v("から"),s("code",[a._v("9")]),a._v("までの整数しか標準出力しない。なぜだろうか。")]),a._v(" "),s("p",[a._v("読者の中にはコード中の問題のある箇所に気が付いた人もいるだろう。これはたったの5行のコードで、問題の箇所も1箇所だ。これが数百行、数千行になり、関数やクラスを複雑に使い、問題の原因は複数の箇所のコードの実行が組み合わさった結果で、しかも自分で書いたコードなので正しく書いたはずだという先入観がある場合、たとえコードとしてはささいな間違いであったとしても、発見は難しい。")]),a._v(" "),s("p",[a._v("こういうとき、実際にコードを1行ずつ実行したり、ある時点でプログラムの実行を停止させて変数の値を見たりしたいものだ。")]),a._v(" "),s("p",[a._v("そんな夢を実現するのがデバッガーだ。この章ではデバッガーとしてGDB(GNUプロジェクトデバッガー)の使い方を学ぶ。")]),a._v(" "),s("p",[a._v("GDBで快適にデバッグするには、プログラムをコンパイルするときにデバッグ情報を出力する必要がある。そのためには、GCCに"),s("code",[a._v("-g")]),a._v("オプションを付けてプログラムをコンパイルする。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ g++ -g -o program program.cpp\n")])])]),s("p",[a._v("本書の始めに作った入門用の"),s("code",[a._v("Makefile")]),a._v("を使う場合は、"),s("code",[a._v("$gcc_options")]),a._v("に"),s("code",[a._v("-g")]),a._v("を加えることになる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("gcc_options = -std=c++17 -Wall --pedantic-error -g\n")])])]),s("p",[a._v("コンパイラーのオプションを変更したあとは、"),s("code",[a._v("make clean")]),a._v("を実行してコンパイル済みヘッダーファイルを生成し直す必要がある。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ make clean\n")])])]),s("h2",{attrs:{id:"gdbのチュートリアル"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gdbのチュートリアル"}},[a._v("#")]),a._v(" GDBのチュートリアル")]),a._v(" "),s("p",[a._v("では具体的にデバッガーを使ってみよう。以下のようなソースファイルを用意する。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    val "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    val "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    val "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    val "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    val "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このプログラムをコンパイルする。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ g++ -g program.cpp -o program\n")])])]),s("p",[a._v("GDBを使ってプログラムのデバッグを始めるには、GDBのオプションとして"),s("code",[a._v("-g")]),a._v("オプション付きでコンパイルしたプログラムのファイル名を指定する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ gdb program\n")])])]),s("p",[a._v("すると以下のように出力される。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('GNU gdb (Ubuntu 8.2-0ubuntu1) 8.2\nCopyright (C) 2018 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType "show copying" and "show warranty" for details.\nThis GDB was configured as "x86_64-linux-gnu".\nType "show configuration" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n    <http://www.gnu.org/software/gdb/documentation/>.\n\nFor help, type "help".\nType "apropos word" to search for commands related to "word"...\nReading symbols from program...done.\n(gdb) \n')])])]),s("p",[a._v("大量のメッセージに戸惑うかもしれないが、最後の行以外はGDBのライセンス表記やドキュメントだ。細部は環境ごとに異なる。")]),a._v(" "),s("p",[a._v("ここで重要なのは最後の行だ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb)\n")])])]),s("p",[a._v("ここにGDBのコマンドを入力する。ヘルプを表示するコマンド"),s("code",[a._v("help")]),a._v("と入力してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) help\n")])])]),s("p",[a._v("ヘルプメッセージが表示される。あるコマンドのヘルプを見たい場合は"),s("code",[a._v("help コマンド")]),a._v("と入力する。いまから使う予定のコマンドである"),s("code",[a._v("list")]),a._v("のヘルプを見てみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) help list\n")])])]),s("p",[s("code",[a._v("list")]),a._v("コマンドは現在のソースファイルの前後10行を表示する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) list\n1\tint main()\n2\t{\n3\t    int val = 0 ;\n4\t    val = 10 ;\n5\t    val += 1 ;\n6\t    val *= 2 ;\n7\t    val *= 2 ;\n8\t    val /= 4 ;\n9\t}\n")])])]),s("p",[a._v("さっそく実行してみよう。実行するコマンドは"),s("code",[a._v("run")]),a._v("だ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) run\nStarting program: 実行可能ファイルへのパス\n[Inferior 1 (process PID) exited normally]\n")])])]),s("p",[s("code",[a._v("run")]),a._v("コマンドを使うとデバッガーはプログラムを実行する。")]),a._v(" "),s("p",[a._v("プログラムの実行を特定の場所で止めるには"),s("code",[a._v("break")]),a._v("コマンドを使ってブレイクポイントを設定する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) help break\n")])])]),s("p",[s("code",[a._v("break")]),a._v("コマンドには関数や行番号を指定できる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break main\n(gdb) break 4\n(gdb) break 5\n")])])]),s("p",[a._v("これで、"),s("code",[a._v("main")]),a._v("関数、4行目、5行目にブレイクポイントを設定した。さっそくもう一度最初から実行してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) run\nStarting program: プログラムへのファイルパス\n\nBreakpoint 1, main () at main.cpp:3\n3\t    int val = 0 ;\n")])])]),s("p",[s("code",[a._v("main")]),a._v("関数にブレイクポイントを設定したので、プログラムは"),s("code",[a._v("main")]),a._v("関数が呼ばれたところ、最初のコードである3行目を実行する手前で止まる。")]),a._v(" "),s("p",[a._v("プログラムの実行を再開するには"),s("code",[a._v("continue")]),a._v("コマンドを使う。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) continue\nContinuing.\n\nBreakpoint 2, main () at main.cpp:4\n4\t    val = 10 ;\n")])])]),s("p",[a._v("4行目にブレイクポイントを設定したので、4行目を実行する手前で止まる。")]),a._v(" "),s("p",[a._v("この時点で、変数"),s("code",[a._v("val")]),a._v("が初期化され、その値は0になっているはずだ。確かめてみよう。変数の値を調べるには"),s("code",[a._v("print")]),a._v("コマンドを使う。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) print val\n$1 = 0\n")])])]),s("p",[a._v("値が"),s("code",[a._v("0")]),a._v("になっていることが確認できた。実行を再開しよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) continue\nContinuing.\n\nBreakpoint 3, main () at main.cpp:5\n5\t    val += 1 ;\n")])])]),s("p",[a._v("4行目を実行し、5行目のブレイクポイントで止まる。4行目を実行したということは、変数"),s("code",[a._v("val")]),a._v("の値は"),s("code",[a._v("10")]),a._v("になっているはずだ。もう一度"),s("code",[a._v("print")]),a._v("コマンドで調べてみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) print val\n$2 = 10\n")])])]),s("p",[a._v("値は"),s("code",[a._v("10")]),a._v("だ。GDBは"),s("code",[a._v("print")]),a._v("の結果の履歴を記録している。"),s("code",[a._v("$1")]),a._v("や"),s("code",[a._v("$2")]),a._v("というのはその記録を参照するための名前だ。その値は"),s("code",[a._v("print")]),a._v("コマンドで確認できる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) print $1\n$3 = 0\n(gdb) print $2\n$4 = 10\n")])])]),s("p",[a._v("現在、プログラムは5行目を実行する手前で止まっている。このまま"),s("code",[a._v("continue")]),a._v("コマンドを使うとプログラムの終了まで実行されてしまう。もう一度1行だけ実行するには"),s("code",[a._v("break 6")]),a._v("で6行目にブレイクポイントを設定すればよいのだが、次の1行だけ実行したいときにいちいちブレイクポイントを設定するのは面倒だ。")]),a._v(" "),s("p",[a._v("そこで使うのが"),s("code",[a._v("step")]),a._v("だ。次の5行目を実行すると、変数"),s("code",[a._v("val")]),a._v("の値は"),s("code",[a._v("11")]),a._v("になっているはずだ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) step\n6\t    val *= 2 ;\n(gdb) print val\n$5 = 11\n")])])]),s("p",[a._v("さて、残りの行も"),s("code",[a._v("step")]),a._v("して実行を1行ずつ確かめてみよう。")]),a._v(" "),s("p",[a._v("GDBの基本的な使い方を覚えたので、これから詳細な使い方を学んでいく。")]),a._v(" "),s("h2",{attrs:{id:"プログラムの実行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#プログラムの実行"}},[a._v("#")]),a._v(" プログラムの実行")]),a._v(" "),s("p",[a._v("GDBでプログラムをデバッグするには、GDBの起動時にプログラムのオプションとしてプログラムのファイル名を指定する。プログラムのファイル名が"),s("code",[a._v("program")]),a._v("の場合、以下のようにする。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ ls\nprogram\n$ gdb program\n")])])]),s("p",[a._v("起動したGDBでプログラムを実行するには、"),s("code",[a._v("run")]),a._v("コマンドを使う。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) run\n")])])]),s("p",[a._v("このとき、プログラムにオプションを指定したい場合は"),s("code",[a._v("run")]),a._v("に続けて記述する。例えばプログラムの標準出力を"),s("code",[a._v("out.txt")]),a._v("にリダイレクトしたいときは以下のようにする。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) run > out.txt\n")])])]),s("h2",{attrs:{id:"プログラムの停止方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#プログラムの停止方法"}},[a._v("#")]),a._v(" プログラムの停止方法")]),a._v(" "),s("p",[a._v("デバッガーの機能として一番わかりやすいのが、実行中のプログラムを一時停止させる機能だ。")]),a._v(" "),s("h3",{attrs:{id:"ブレイクポイント"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ブレイクポイント"}},[a._v("#")]),a._v(" ブレイクポイント")]),a._v(" "),s("p",[a._v("コマンド"),s("code",[a._v("break")]),a._v("はブレイクポイントを設定する。プログラムの実行がブレイクポイントに達した場合、GDBはブレイクポイントの直前でプログラムの実行を中断する。")]),a._v(" "),s("p",[a._v("ブレイクポイントを設定する場所は"),s("code",[a._v("break")]),a._v("コマンドへの引数で指定する。省略して"),s("code",[a._v("b")]),a._v("だけでもよい。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break 場所\n(gdb) b 場所\n")])])]),s("p",[a._v("場所として使えるのは行番号と関数名だ。")]),a._v(" "),s("h4",{attrs:{id:"行番号へのブレイクポイント"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行番号へのブレイクポイント"}},[a._v("#")]),a._v(" 行番号へのブレイクポイント")]),a._v(" "),s("p",[a._v("現在のソースファイルの123行目にブレイクポイントを設定する場合は以下のように書く。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break 123\n")])])]),s("p",[a._v("ソースファイルが複数ある場合は、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break ファイル名:行番号\n")])])]),s("p",[a._v("と書く。例えば"),s("code",[a._v("foo.cpp")]),a._v("の8行目にブレイクポイントを仕掛ける場合は、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break foo.cpp:8\n")])])]),s("p",[a._v("と書く。")]),a._v(" "),s("h4",{attrs:{id:"ブレイクポイントの確認"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ブレイクポイントの確認"}},[a._v("#")]),a._v(" ブレイクポイントの確認")]),a._v(" "),s("p",[a._v("設定したブレイクポイントの一覧は、"),s("code",[a._v("info breakpoints")]),a._v("コマンドで確認できる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break 5\nBreakpoint 1 at 0x1150: file main.cpp, line 5.\n(gdb) break 6\nBreakpoint 2 at 0x1157: file main.cpp, line 6.\n(gdb) break 7\nBreakpoint 3 at 0x115b: file main.cpp, line 7.\n(gdb) info breakpoints \nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x0000000000001150 in main() at main.cpp:5\n2       breakpoint     keep y   0x0000000000001157 in main() at main.cpp:6\n3       breakpoint     keep y   0x000000000000115b in main() at main.cpp:7\n")])])]),s("p",[a._v("これは5,6,7行目にそれぞれブレイクポイントを設定したあとの"),s("code",[a._v("info breakpoints")]),a._v("の結果だ。")]),a._v(" "),s("p",[a._v("この表の意味は、左から番号(Num, Number)、種類(Type)、中断後の処理(Disposition), 有効/無効(Enb, Enable/Disable)、アドレス(Address), 内容(What)となっている。")]),a._v(" "),s("p",[a._v("ブレイクポイントには作成された順番に番号が振られる。ブレイクポイントの設定を変えるには、この番号でブレイクポイントを参照する。")]),a._v(" "),s("p",[a._v("ブレイクポイントには3種類ある。普通のブレイクポイントである"),s("code",[a._v("breakpoint")]),a._v("のほかに、特殊なブレイクポイントであるウォッチポイント(watchpoint)、キャッチポイント(catchpoint)がある。")]),a._v(" "),s("p",[a._v("中断後の処理と有効/無効の切り替えはあとで説明する。")]),a._v(" "),s("p",[a._v("アドレスというのはブレイクポイントを設定した場所に該当するプログラムのコード部分であり、本書では解説しない。")]),a._v(" "),s("p",[a._v("内容はブレイクポイントを設定した場所の情報だ。")]),a._v(" "),s("h4",{attrs:{id:"ブレイクポイントの削除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ブレイクポイントの削除"}},[a._v("#")]),a._v(" ブレイクポイントの削除")]),a._v(" "),s("p",[a._v("ブレイクポイントを削除するには"),s("code",[a._v("delete")]),a._v("コマンドを使う。削除するブレイクポイントは番号で指定する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) delete 1\n")])])]),s("p",[a._v("番号を指定しないとすべてのブレイクポイントを削除することができる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) delete\nDelete all breakpoints? (y or n) y\n(gdb) info breakpoints\nNo breakpoints or watchpoints.\n")])])]),s("h4",{attrs:{id:"ブレイクポイントの有効-無効"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ブレイクポイントの有効-無効"}},[a._v("#")]),a._v(" ブレイクポイントの有効/無効")]),a._v(" "),s("p",[a._v("ブレイクポイントは有効/無効を切り替えることができる。")]),a._v(" "),s("p",[a._v("ブレイクポイントを無効化するには"),s("code",[a._v("disable")]),a._v("コマンドを使う。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) disable 1\n")])])]),s("p",[a._v("ブレイクポイントを有効化するには"),s("code",[a._v("enable")]),a._v("コマンドを使う。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) enable 1\n")])])]),s("p",[a._v("ブレイクポイントは発動したあとに自動で無効化させることができる。")]),a._v(" "),s("p",[s("code",[a._v("enable [breakpoints] once")]),a._v("コマンドで、ブレイクポイントが一度発動すると自動的に無効化されるブレイクポイントを設定できる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) enable 1 once\n")])])]),s("p",[a._v("このコマンドは、ブレイクポイント番号1が一度発動したら自動的に無効化する設定をする。")]),a._v(" "),s("p",[a._v("ブレイクポイントは$n$回発動したあとに自動的に無効化することもできる。そのためのコマンドは"),s("code",[a._v("enable [breakpoints] count n")]),a._v("だ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) enable 1 count 10\n")])])]),s("p",[a._v("上のコマンドは、ブレイクポイント番号1が10回発動したら自動的に無効化されるよう設定している。")]),a._v(" "),s("h4",{attrs:{id:"関数名へのブレイクポイント"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#関数名へのブレイクポイント"}},[a._v("#")]),a._v(" 関数名へのブレイクポイント")]),a._v(" "),s("p",[a._v("ブレイクポイントの場所として関数名を書くと、その関数名が呼び出されたあと、関数の本体の1行目が実行されるところにブレイクポイントが設定される。")]),a._v(" "),s("p",[a._v("現在のソースファイルの関数"),s("code",[a._v("main")]),a._v("にブレイクポイントを設定する場合は以下のように書く。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break main\n")])])]),s("p",[a._v("ソースファイルが複数ある場合は、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) ファイル名:関数名\n")])])]),s("p",[a._v("と書く。")]),a._v(" "),s("p",[a._v("C++では異なる引数で同じ名前の関数が使える。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このようなプログラムで関数"),s("code",[a._v("f")]),a._v("にブレイクポイントを設定すると、"),s("code",[a._v("f")]),a._v("という名前の関数すべてにブレイクポイントが設定される。")]),a._v(" "),s("p",[a._v("ブレイクポイントの一覧を表示する"),s("code",[a._v("info breakpoints")]),a._v("コマンドで確かめてみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break f\nBreakpoint 1 at 0x1149: f. (3 locations)\n(gdb) info breakpoints \nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   <MULTIPLE>         \n1.1                         y     0x0000000000001149 in f() at main.cpp:1\n1.2                         y     0x0000000000001153 in f(int) at main.cpp:2\n1.3                         y     0x000000000000115f in f(double) at main.cpp:3\n")])])]),s("p",[a._v("関数名"),s("code",[a._v("f")]),a._v("に該当するすべての関数に、ブレイクポイント番号1としてブレイクポイントが設定される。関数にはそれぞれサブの番号が振られる。")]),a._v(" "),s("p",[a._v("この状態でブレイクポイント番号1を削除すると、1.1, 1.2, 1.3はすべて削除される。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) delete 1\n(gdb) info breakpoints\nNo breakpoints or watchpoints.\n")])])]),s("p",[a._v("もし、オーバーロードされた同名の関数のうちの一部だけにブレイクポイントを仕掛けたい場合、曖昧性を解決するメニューを表示する設定にすることで、一部の関数だけを選ぶことができる。メニューを表示する設定にするには、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) set multiple-symbols ask\n")])])]),s("p",[a._v("というコマンドを使う。これ以降の"),s("code",[a._v("break")]),a._v("コマンドが名前が曖昧であることを検出した場合、以下のようなメニューを表示する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break f\n[0] cancel\n[1] all\n[2] run.cpp:f()\n[3] run.cpp:f(double)\n[4] run.cpp:f(int)\n>\n")])])]),s("p",[a._v("ここで"),s("code",[a._v("0")]),a._v("を入力するとキャンセル。"),s("code",[a._v("1")]),a._v("を入力するとすべての関数にブレイクポイントを設定する。")]),a._v(" "),s("p",[a._v("特定の関数だけにブレイクポイントを設定したい場合、その関数に対応する番号を入力する。例えば、"),s("code",[a._v("f()")]),a._v("と"),s("code",[a._v("f(int)")]),a._v("だけにブレイクポイントを設定したい場合は、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("> 2 4\n")])])]),s("p",[a._v("と入力する。")]),a._v(" "),s("h3",{attrs:{id:"条件付きブレイクポイント"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件付きブレイクポイント"}},[a._v("#")]),a._v(" 条件付きブレイクポイント")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break ... if 条件\n")])])]),s("p",[a._v("と入力すると、"),s("code",[a._v("条件")]),a._v("が"),s("code",[a._v("true")]),a._v("となるときのみブレイクポイントが発動する。")]),a._v(" "),s("p",[a._v("例えば以下のようなコードで、")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("以下のように7行目に変数"),s("code",[a._v("i")]),a._v("が"),s("code",[a._v("500")]),a._v("に等しい条件を設定すると")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break 7 if i == 500\n")])])]),s("p",[a._v("変数"),s("code",[a._v("i")]),a._v("が"),s("code",[a._v("500")]),a._v("でありかつ7行目が実行される直前でブレイクポイントが発動する。")]),a._v(" "),s("h2",{attrs:{id:"プログラムの実行再開とステップ実行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#プログラムの実行再開とステップ実行"}},[a._v("#")]),a._v(" プログラムの実行再開とステップ実行")]),a._v(" "),s("p",[a._v("以下のようなプログラムがあるとする。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このプログラムを"),s("code",[a._v("main")]),a._v("関数から1行ずつ実行してその挙動を確かめたい。その場合に、すべての行にブレイクポイントを設定するのは面倒だ。GDBではこのような場合に、現在中断している場所から1行だけ実行する方法がある。")]),a._v(" "),s("h3",{attrs:{id:"実行再開-continue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#実行再開-continue"}},[a._v("#")]),a._v(" 実行再開(continue)")]),a._v(" "),s("p",[s("code",[a._v("continue")]),a._v("コマンドは実行を再開する。省略して"),s("code",[a._v("c")]),a._v("でもよい")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) continue\n(gdb) c\n")])])]),s("p",[a._v("実行を再開すると、次のブレイクポイントが発動するか、プログラムが終了するまで実行が続く。")]),a._v(" "),s("h3",{attrs:{id:"ステップ実行-step"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ステップ実行-step"}},[a._v("#")]),a._v(" ステップ実行(step)")]),a._v(" "),s("p",[s("code",[a._v("step")]),a._v("コマンドは現在実行が中断している場所から、ソースファイルで1行分の実行をして中断する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) step\n(gdb) s\n")])])]),s("p",[s("code",[a._v("step")]),a._v("コマンドは省略して"),s("code",[a._v("s")]),a._v("でもよい。")]),a._v(" "),s("p",[a._v("先ほどのソースファイルで、まず"),s("code",[a._v("main")]),a._v("関数にブレイクポイントを設定して実行すると、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break main\n(gdb) run\n")])])]),s("p",[s("code",[a._v("main")]),a._v("関数に入った直後で実行が中断する。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("この状態で"),s("code",[a._v("step")]),a._v("コマンドを使うと")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) step\n")])])]),s("p",[a._v("1行分にあたる実行が行われ、また中断される。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("もう一度"),s("code",[a._v("step")]),a._v("コマンドを使うと、今度は関数"),s("code",[a._v("f")]),a._v("の中で実行が中断する。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("このまま"),s("code",[a._v("step")]),a._v("コマンドを続けていくと、また"),s("code",[a._v("main")]),a._v("関数に戻り、また次の行が実行され、また関数"),s("code",[a._v("f")]),a._v("が実行される。")]),a._v(" "),s("p",[a._v("1行ずつ実行するのではなく$n$行実行したい場合は、"),s("code",[a._v("step")]),a._v("コマンドに$n$を指定する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) step n\n")])])]),s("p",[a._v("するとソースファイルの$n$行分実行される。例えば以下のように書くと、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) step 3\n")])])]),s("p",[a._v("3行分実行される。")]),a._v(" "),s("h3",{attrs:{id:"ネクスト実行-next"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ネクスト実行-next"}},[a._v("#")]),a._v(" ネクスト実行(next)")]),a._v(" "),s("p",[s("code",[a._v("step")]),a._v("コマンドはソースファイルの1行分を実行してくれるが、途中に関数呼び出しが入る場合、その関数のソースファイルがある場合はその関数の中も1行とカウントする。"),s("code",[a._v("next")]),a._v("コマンドは現在実行が中断しているソースファイルの次の行を1行として扱い、次の行まで実行して中断する。")]),a._v(" "),s("p",[a._v("例えばプログラムが以下の状態で中断しているとする。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("このまま"),s("code",[a._v("step")]),a._v("コマンドを実行すると、関数"),s("code",[a._v("f")]),a._v("の中の1行で実行が中断する。一方"),s("code",[a._v("next")]),a._v("コマンドを使うと、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) next\n")])])]),s("p",[a._v("現在止まっているソースファイルの次の1行の手前まで実行して中断する。途中の関数呼び出しはすべて実行される。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v("  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[s("code",[a._v("step")]),a._v("コマンドと同じく、"),s("code",[a._v("next")]),a._v("コマンドも$n$行分一度に実行することができる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) next n\n")])])]),s("h3",{attrs:{id:"関数から抜けるまで実行-finish"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#関数から抜けるまで実行-finish"}},[a._v("#")]),a._v(" 関数から抜けるまで実行(finish)")]),a._v(" "),s("p",[s("code",[a._v("finish")]),a._v("コマンドは現在の関数から"),s("code",[a._v("return")]),a._v("するまで実行する。")]),a._v(" "),s("h2",{attrs:{id:"バックトレース"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#バックトレース"}},[a._v("#")]),a._v(" バックトレース")]),a._v(" "),s("p",[a._v("バックトレースは中断しているプログラムの情報を得るとても強力なコマンドだ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) backtrace\n(gdb) bt\n")])])]),s("p",[a._v("バックトレースを表示するには"),s("code",[a._v("backtrace")]),a._v("もしくは"),s("code",[a._v("bt")]),a._v("というコマンドを使う。")]),a._v(" "),s("p",[a._v("例えば以下のようなソースファイルがある。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("banana")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cherry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("banana")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cherry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("ここで関数"),s("code",[a._v("f")]),a._v("に注目してみよう。関数"),s("code",[a._v("f")]),a._v("はさまざまな関数から呼ばれる。関数"),s("code",[a._v("main")]),a._v("から呼ばれるし、関数"),s("code",[a._v("apple")]),a._v("や"),s("code",[a._v("banana")]),a._v("からも呼ばれる。特に、関数"),s("code",[a._v("cherry")]),a._v("は関数"),s("code",[a._v("apple")]),a._v("を呼び出すので、間接的に関数"),s("code",[a._v("f")]),a._v("を呼ぶ。")]),a._v(" "),s("p",[a._v("関数"),s("code",[a._v("f")]),a._v("にブレイクポイントを仕掛けて実行してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break f\n(gdb) run\n(gdb) continue\n(gdb) continue\n(gdb) continue\n(gdb) continue\n")])])]),s("p",[a._v("関数"),s("code",[a._v("f")]),a._v("が呼ばれるたびに実行が中断するが、関数"),s("code",[a._v("f")]),a._v("がどこから呼ばれたのかがわからない。")]),a._v(" "),s("p",[a._v("こういうときにバックトレースが役に立つ。")]),a._v(" "),s("p",[a._v("上のコマンドを実行しながら、関数"),s("code",[a._v("f")]),a._v("のブレイクポイントが発動するたびに、"),s("code",[a._v("backtrace")]),a._v("コマンドを入力してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break f\n(gdb) run\n(gdb) backtrace\n#0  f () at main.cpp:2\n#1  0x0000555555556310 in main () at main.cpp:10\n")])])]),s("p",[s("code",[a._v("#0")]),a._v("がバックトレースの最も深い現在のスタックフレームだ。これは関数"),s("code",[a._v("f")]),a._v("でソースファイル"),s("code",[a._v("main.cpp")]),a._v("の2行目だ。"),s("code",[a._v("#1")]),a._v("が"),s("code",[a._v("#0")]),a._v("の上のスタックフレームで、これは関数"),s("code",[a._v("main")]),a._v("で10行目にある。")]),a._v(" "),s("p",[a._v("実行を再開して、次の関数"),s("code",[a._v("f")]),a._v("のバックトレースを見よう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) continue\n(gdb) backtrace\n#0  f () at main.cpp:2\n#1  0x00005555555562ec in apple () at main.cpp:4\n#2  0x0000555555556315 in main () at main.cpp:11\n")])])]),s("p",[a._v("今回はスタックフレームが3つある。最も外側のスタックフレームは関数"),s("code",[a._v("main")]),a._v("で、そこから関数"),s("code",[a._v("apple")]),a._v("が呼び出され、そして関数"),s("code",[a._v("f")]),a._v("が呼び出される。")]),a._v(" "),s("p",[a._v("さらに進めよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) continue\n(gdb) backtrace\n#0  f () at main.cpp:2\n#1  0x00005555555562f8 in banana () at main.cpp:5\n#2  0x000055555555631a in main () at main.cpp:12\n")])])]),s("p",[a._v("今度は"),s("code",[a._v("main")]),a._v("→"),s("code",[a._v("banana")]),a._v("→"),s("code",[a._v("f")]),a._v("になった。次はどうだろうか。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) continue\n(gdb) backtrace\n#0  f () at main.cpp:2\n#1  0x00005555555562ec in apple () at main.cpp:4\n#2  0x0000555555556304 in cherry () at main.cpp:6\n#3  0x000055555555631f in main () at main.cpp:13\n")])])]),s("p",[a._v("最後は"),s("code",[a._v("main")]),a._v("→"),s("code",[a._v("cherry")]),a._v("→"),s("code",[a._v("apple")]),a._v("→"),s("code",[a._v("f")]),a._v("だ。")]),a._v(" "),s("p",[a._v("このようにバックトレースを使うことでプログラムの状態を調べることができる。")]),a._v(" "),s("h2",{attrs:{id:"変数の値を確認"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#変数の値を確認"}},[a._v("#")]),a._v(" 変数の値を確認")]),a._v(" "),s("p",[a._v("変数の値を確認するには"),s("code",[a._v("print")]),a._v("コマンドを使う。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) print 式\n")])])]),s("p",[s("code",[a._v("print")]),a._v("コマンドは式を評価した結果を出力する。")]),a._v(" "),s("p",[a._v("例えば以下のようなソースファイルがある。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("この変数"),s("code",[a._v("x")]),a._v("の値を見ていこう。")]),a._v(" "),s("p",[a._v("まず変数"),s("code",[a._v("x")]),a._v("が初期化されるところまで実行する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break main\n(gdb) run\n(gdb) step\n(gdb) print x\n$1 = 1\n")])])]),s("p",[a._v("1行ずつ実行して値を見ていこう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) step\n(gdb) print x\n$2 = 2\n(gdb) step\n(gdb) print x\n$3 = 4\n")])])]),s("p",[s("code",[a._v("print 式")]),a._v("コマンドで注意すべき点としては、"),s("code",[a._v("式")]),a._v("の副作用もプログラムに反映されるということだ。例えば以下のように変数"),s("code",[a._v("x")]),a._v("を変更する式も使えるし、変数"),s("code",[a._v("x")]),a._v("は実際に変更されてしまう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) print ++x\n(gdb) print x = 0\n")])])]),s("p",[a._v("式では関数まで呼べてしまう。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このプログラムは関数"),s("code",[a._v("hello")]),a._v("を呼ばないし標準出力には何も出力しない。しかしこのプログラムをGDBでロードし、"),s("code",[a._v("main")]),a._v("関数にブレイクポイントを設定してから実行し、ブレイクポイントが発動したら"),s("code",[a._v("print hello()")]),a._v("コマンドを使ってみると、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("(gdb) break main\n(gdb) run\n(gdb) print hello()\n")])])]),s("p",[a._v("なんと関数"),s("code",[a._v("hello")]),a._v("が呼び出され、標準出力に"),s("code",[a._v("hello")]),a._v("と出力されるではないか。")]),a._v(" "),s("p",[s("code",[a._v("print")]),a._v("コマンドの式のもたらす副作用には注意しよう。")]),a._v(" "),s("h2",{attrs:{id:"シグナルによるプログラムの中断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#シグナルによるプログラムの中断"}},[a._v("#")]),a._v(" シグナルによるプログラムの中断")]),a._v(" "),s("p",[a._v("プログラムはさまざまな理由によりシグナルを出して実行を強制的に終了する。このシグナルはGDBによってトラップされ、ブレイクポイントと同じくプログラムの中断として扱われる。")]),a._v(" "),s("p",[a._v("プログラムが実行を終了するようなシグナルは、プログラムの不具合によって生じる。具体的な不具合は実行環境に依存するが、たいていの環境で動く不具合は、nullポインターを経由した間接アクセスと、ゼロ除算だ。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// nullポインターを経由した間接アクセス")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" ptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("nullptr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("ptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ゼロ除算")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("実際にそのようなプログラムを作ってGDBで実行し、プログラムが中断されることを確認してみよう。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cin "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このプログラムはユーザーが標準入力から"),s("code",[a._v("0")]),a._v("を入力するとゼロ除算となり強制的に終了する。GDBで実行してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ gdb program\n(gdb) run\nStarting program:\n0\n\nProgram received signal SIGFPE, Arithmetic exception.\n0x0000555555556336 in main () at main.cpp:5\n5\t    std::cout << 1 / x ;\n")])])]),s("p",[a._v("ちょうどゼロ除算を起こした箇所でプログラムの実行が中断する。")]),a._v(" "),s("p",[a._v("このとき中断した状態でプログラムのさまざまな状態を観測できる。例えばバックトレースを表示したり、変数の値を確認したりできる。")]),a._v(" "),s("h2",{attrs:{id:"コアダンプを使ったプログラムの状態の確認"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#コアダンプを使ったプログラムの状態の確認"}},[a._v("#")]),a._v(" コアダンプを使ったプログラムの状態の確認")]),a._v(" "),s("p",[a._v("プログラムがシグナルによって強制的に終了したときに、たまたまデバッガーで動かしていたならばプログラムの状態を調べられる。しかし都合よくデバッガーで実行していない場合はどうすればいいのか。")]),a._v(" "),s("p",[a._v("まずプログラムを普通に実行してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ program\n0\nFloating point exception (core dumped)\n")])])]),s("p",[s("code",[a._v("core dumped")]),a._v("という文字が気になる。プログラムはシグナルで強制的に実行を終了するときコアファイルをダンプする。このファイル名は通常"),s("code",[a._v("core")]),a._v("だ。通常はカレントディレクトリーに"),s("code",[a._v("core")]),a._v("という名前のファイルが生成されているはずだ。")]),a._v(" "),s("p",[a._v("もしカレントディレクトリーに"),s("code",[a._v("core")]),a._v("という名前のファイルがない場合、以下のコマンドを実行する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ ulimit -c unlimited\n")])])]),s("p",[a._v("これにより"),s("code",[a._v("core")]),a._v("ファイルが生成されるようになる。")]),a._v(" "),s("p",[a._v("すでにコアファイルが存在する場合に上書きされるかどうかは環境により異なる。昔のコアファイルがいらないのであれば消しておこう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ rm ./core\n$ ./program\n0\nFloating point exception (core dumped)\n$ find core\ncore\n")])])]),s("p",[a._v("このコアファイルはデバッガーに読み込ませることで、プログラムが強制的に終了するに至った瞬間のプログラムの状態を調べるのに使える。")]),a._v(" "),s("p",[a._v("使い方はGDBにプログラムファイルと一緒に指定するだけだ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ gdb program core\n...\nCore was generated by `./program'.\nProgram terminated with signal SIGFPE, Arithmetic exception.\n#0  0x000055dcbfd3d336 in main () at main.cpp:5\n5\t    std::cout << 1 / x ;\n(gdb) backtrace\n#0  0x000055dcbfd3d336 in main () at main.cpp:5\n(gdb) print x\n$1 = 0\n")])])]),s("p",[a._v("デバッガーはとても役に立つ。本書では少しだけしか解説しなかったが、このほかにも強力な機能がたくさんある。")])])}),[],!1,null,null,null);t.default=e.exports}}]);