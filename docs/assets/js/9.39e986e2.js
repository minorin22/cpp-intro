(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{241:function(a,t,s){"use strict";s.r(t);var n=s(0),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"デバッグ：コンパイルエラーメッセージの読み方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#デバッグ：コンパイルエラーメッセージの読み方"}},[a._v("#")]),a._v(" デバッグ：コンパイルエラーメッセージの読み方")]),a._v(" "),s("p",[a._v("やれやれ疲れた。この辺でひと休みして、デバッグについて考えよう。まずはコンパイルエラーについてだ。")]),a._v(" "),s("p",[a._v("プログラムにはさまざまなバグがあるが、コンパイルエラーは最も簡単なバグだ。というのも、プログラムのバグの存在が実行前に発覚したわけだから、手間が省ける。もしコンパイルエラーにならない場合、実行した結果から、バグがあるかどうかを判断しなければならない。")]),a._v(" "),s("p",[a._v("読者の中には、せっかく書いたソースコードをコンパイルしたらコンパイルエラーが出たので、運が悪かったとか、失敗したとか、怒られてつらい気持ちになったなどと感じることがあるかもしれない。しかしそれは大違いだ。コンパイラーによって読者はプログラムを実行することなくバグが発見できたのだから、読者は運が良かった、大成功した、褒められて最高の気持ちになったと感じるべきなのだ。")]),a._v(" "),s("p",[a._v("さあ皆さんご一緒に、")]),a._v(" "),s("ul",[s("li",[a._v("コンパイルエラーは普通")]),a._v(" "),s("li",[a._v("コンパイルエラーが出たらありがとう")]),a._v(" "),s("li",[a._v("コンパイルエラーが出たら大喜び")])]),a._v(" "),s("p",[a._v("熟練のプログラマーは自分の書いたコードがコンパイルエラーを出さずに一発でコンパイルが通った場合、逆に不安になるくらいだ。")]),a._v(" "),s("p",[a._v("もしバグがあるのにコンパイルエラーが出なければ、バグの存在に気が付かないまま、読者の書いたソフトウェアは広く世の中に使われ、10年後、20年後に最もバグが発見されてほしくない方法で発見されてしまうかもしれない。すなわち、セキュリティ上問題となる脆弱性という形での発覚だ。しかし安心してほしい。いま読者が出したコンパイルエラーによって、そのような悲しい未来の可能性は永久に排除されたのだ。コンパイルエラーはどんどん出すとよい。")]),a._v(" "),s("p",[a._v("コンパイルエラーの原因は2つ。")]),a._v(" "),s("ol",[s("li",[a._v("文法エラー")]),a._v(" "),s("li",[a._v("意味エラー")]),a._v(" "),s("li",[a._v("コンパイラーのバグ")])]),a._v(" "),s("p",[a._v("3つだった。コンパイルエラーの原因は3つ。")]),a._v(" "),s("ol",[s("li",[a._v("文法エラー")]),a._v(" "),s("li",[a._v("意味エラー")]),a._v(" "),s("li",[a._v("コンパイラーのバグ")]),a._v(" "),s("li",[a._v("コンピューターの故障")])]),a._v(" "),s("p",[a._v("4つだった。ただ、3.と4.はめったにないから無視してよい。")]),a._v(" "),s("h2",{attrs:{id:"文法エラー"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文法エラー"}},[a._v("#")]),a._v(" 文法エラー")]),a._v(" "),s("p",[a._v("文法エラーとは、C++というプログラミング言語の文法に従っていないエラーのことだ。これはC++として解釈できないので、当然エラーになる。")]),a._v(" "),s("p",[a._v("よくある文法エラーとしては、文末のセミコロンを打ち忘れたものがある。例えば以下のコードには間違いがある。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("これをコンパイルすると以下のようにコンパイルエラーメッセージが出力される。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ make\ng++ -std=c++17 -Wall --pedantic-error -include all.h main.cpp -o program\nmain.cpp: In function ‘int main()’:\nmain.cpp:4:5: error: expected ‘,’ or ‘;’ before ‘auto’\n     auto y = x + 1 ;\n     ^~~~\nmain.cpp:3:10: warning: unused variable ‘x’ [-Wunused-variable]\n     auto x = 1 + 1\n          ^\nMakefile:4: recipe for target 'program' failed\nmake: *** [program] Error 1\n")])])]),s("p",[a._v("コンパイラーのメッセージを読み慣れていない読者はここで考えることを放棄してコンピューターの電源を落とし家を出て街を徘徊し夕日を見つめて人生、宇宙、すべてについての究極の質問への答えを模索してしまうことだろう。")]),a._v(" "),s("p",[a._v("しかし恐れるなかれ。コンパイラーのエラーメッセージを読み解くのは難しくない。")]),a._v(" "),s("p",[a._v("まず最初の2行を見てみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ make\ng++ -std=c++17 -Wall --pedantic-error -include all.h main.cpp -o program\n")])])]),s("p",[a._v("1行目はシェルに"),s("code",[a._v("make")]),a._v("を実行させるためのコマンド、2行目は"),s("code",[a._v("make")]),a._v("が実行したレシピの中身だ。これはコンパイラーによるメッセージではない。")]),a._v(" "),s("p",[a._v("3行目からはコンパイラーによる出力だ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp: In function ‘int main()’:\n")])])]),s("p",[a._v("コンパイラーはソースファイル"),s("code",[a._v("main.cpp")]),a._v("の中の、"),s("code",[a._v("int main()")]),a._v("という関数について、特に言うべきことがあると主張している。")]),a._v(" "),s("p",[a._v("言うべきこととは以下だ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp:4:5: error: expected ‘,’ or ‘;’ before ‘auto’\n     auto y = x + 1 ;\n     ^~~~\n")])])]),s("p",[a._v("GCCというコンパイラーのエラーメッセージは、以下のフォーマットを採用している。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ソースファイル名:行番号:列番号: メッセージの種類: メッセージの内容\n")])])]),s("p",[a._v("ここでのメッセージの種類は"),s("code",[a._v("error")]),a._v("、つまりこのメッセージはエラーを伝えるものだ。")]),a._v(" "),s("p",[a._v("ソースファイル名は"),s("code",[a._v("main.cpp")]),a._v("、つまりエラーは"),s("code",[a._v("main.cpp")]),a._v("の中にあるということだ。")]),a._v(" "),s("p",[a._v("行番号というのは、最初の行を1行目とし、改行ごとにインクリメントされていく。今回のソースファイルの場合、以下のようになる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("1 int main()\n2 {\n3     auto x = 1 + 1 \n4     auto y = x + 1 ;\n5 }\n")])])]),s("p",[a._v("もし読者が素晴らしいテキストエディターであるVimを使っている場合、"),s("code",[a._v(":set nu")]),a._v("すると行番号を表示できる。")]),a._v(" "),s("p",[a._v("その上でエラーメッセージの行番号を確認すると"),s("code",[a._v("4")]),a._v("とある。つまりコンパイラーは4行目に問題があると考えているわけだ。")]),a._v(" "),s("p",[a._v("4行目を確認してみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    auto y = x + 1 ;\n")])])]),s("p",[a._v("何の問題もないように見える。さらにエラーメッセージを読んでみよう。")]),a._v(" "),s("p",[a._v("列番号が"),s("code",[a._v("5")]),a._v("となっている。列番号というのは、行頭からの文字数だ。最初の文字を1文字目とし、文字ごとにインクリメントされていく。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("123456789...\n    auto y = x + 1 ;\n")])])]),s("p",[a._v("4行目は空白文字を4つ使ってインデントしているので、"),s("code",[a._v("auto")]),a._v("の"),s("code",[a._v("a")]),a._v("の列番号は"),s("code",[a._v("5")]),a._v("だ。ここに問題があるのだろうか。何も問題がないように見える。")]),a._v(" "),s("p",[a._v("この謎を解くためには、メッセージの内容を読まなければならない。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("expected ‘,’ or ‘;’ before ‘auto’\n     auto y = x + 1 ;\n     ^~~\n")])])]),s("p",[a._v("これは日本語に翻訳すると以下のようになる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("‘auto’の前に','か';'があるべき\n     auto y = x + 1 ;\n     ^~~\n")])])]),s("p",[a._v("1行目はエラー内容をテキストで表現したものだ。これによると、"),s("code",[a._v("'auto'")]),a._v("の前に"),s("code",[a._v("','")]),a._v("か"),s("code",[a._v("';'")]),a._v("があるべきとあるが、やはりまだわからない。")]),a._v(" "),s("p",[a._v("2行目は問題のある箇所のソースコードを部分的に抜粋したもので、3行目はそのソースコードの問題のある文字を視覚的にわかりやすく示しているものだ。")]),a._v(" "),s("p",[a._v("ともかく、コンパイラーの指示に従って"),s("code",[a._v("'auto'")]),a._v("の前に"),s("code",[a._v("','")]),a._v("を付けてみよう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    ,auto y = x + 1 ;\n")])])]),s("p",[a._v("これをコンパイルすると、また違ったエラーメッセージが表示される。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp: In function ‘int main()’:\nmain.cpp:4:6: error: expected unqualified-id before ‘auto’\n     ,auto y = x + 1 ;\n      ^~~~\n")])])]),s("p",[a._v("では"),s("code",[a._v("';'")]),a._v("ならばどうか。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    ;auto y = x + 1 ;\n")])])]),s("p",[a._v("これはコンパイルが通るようだ。")]),a._v(" "),s("p",[a._v("しかしなぜこれでコンパイルが通るのだろう。そのためには、コンパイラーが問題だとした行の1つ上の行を見る必要がある。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    auto x = 1 + 1\n    auto y = x + 1 ;\n")])])]),s("p",[a._v("コンパイラーにとって、改行は空白文字と同じくソースファイル中の意味のあるトークン(キーワードや名前や記号)を区切る文字でしかない。コンパイラーにとって、このコードは実質以下のように見えている。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("auto x=1+1 auto y=x+1;\n")])])]),s("p",[s("code",[a._v('"1 auto"')]),a._v("というのは文法エラーだ。なのでコンパイラーは文法エラーが発覚する最初の文字である"),s("code",[a._v("'auto'")]),a._v("の"),s("code",[a._v("'a'")]),a._v("を指摘したのだ。")]),a._v(" "),s("p",[a._v("人間にとって自然になるように修正すると、コンパイラーが指摘した行の1つ上の行の行末に"),s("code",[a._v("';'")]),a._v("を追加すべきだ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    auto x = 1 + 1 ;\n    auto y = x + 1 ;\n")])])]),s("p",[a._v("さて、問題自体は解決したわけだが、残りのメッセージも見ていこう。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp:3:10: warning: unused variable ‘x’ [-Wunused-variable]\n     auto x = 1 + 1\n")])])]),s("p",[a._v("これはコンパイラーによる警告メッセージだ。警告メッセージについて詳しくは、デバッグ：警告メッセージの章で解説する。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Makefile:4: recipe for target 'program' failed\nmake: *** [program] Error 1\n")])])]),s("p",[a._v("これはGNU Makeによるメッセージだ。GCCがソースファイルを正しくコンパイルできず、実行が失敗したとエラーを返したので、レシピの実行が失敗したことを伝えるメッセージだ。")]),a._v(" "),s("p",[a._v("プログラムはどうやってエラーを通知するのか。"),s("code",[a._v("main")]),a._v("関数の戻り値によってだ。"),s("code",[a._v("main")]),a._v("関数は関数であるので、戻り値がある。"),s("code",[a._v("main")]),a._v("関数の戻り値は"),s("code",[a._v("int")]),a._v("型だ。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 戻り値の型")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// main関数の残りの部分")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("code",[a._v("main")]),a._v("関数が何も値を返さない場合、"),s("code",[a._v("return 0")]),a._v("したものとみなされる。"),s("code",[a._v("main")]),a._v("関数が"),s("code",[a._v("0")]),a._v("もしくは"),s("code",[a._v("EXIT_SUCCESS")]),a._v("を返した場合、プログラムの実行の成功を通知したことになる。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 必ず実行が成功したと通知するプログラム")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("プログラムの実行が失敗した場合、"),s("code",[a._v("main")]),a._v("関数は"),s("code",[a._v("EXIT_FAILURE")]),a._v("を返すことでエラーを通知できる。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 必ず実行が失敗したと通知するプログラム")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" EXIT_FAILURE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("code",[a._v("EXIT_SUCCESS")]),a._v("と"),s("code",[a._v("EXIT_FAILURE")]),a._v("はマクロだ。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("#"),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("define")]),a._v(" EXIT_SUCCESS")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("#"),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("define")]),a._v(" EXIT_FAILURE")]),a._v("\n")])])]),s("p",[a._v("その中身はC++標準規格では規定されていない。どうしても値を知りたい場合は以下のプログラムを実行してみるとよい。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"EXIT_SUCCESS: "')]),a._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" EXIT_SUCCESS "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\n"')]),a._v("s\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"EXIT_FAILURE: "')]),a._v("s   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" EXIT_FAILURE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("文法エラーというのは厄介なバグだ。というのも、コンパイラーというのは正しい文法のソースファイルを処理するように作られている。文法を間違えた場合、ソースファイル全体が正しくないということになる。コンパイラーは文法違反に遭遇した場合、なるべく人間がよく間違えそうなパターンをヒューリスティックに指摘することもしている。そのため、エラーメッセージに指摘された行番号と列番号は、必ずしも人間にとっての問題の箇所と一致しない。")]),a._v(" "),s("p",[a._v("もう1つ例を見てみよう。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 引数を3つ取って足して返す関数")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    std"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("GCCによるコンパイルエラーメッセージだけ抜粋すると以下のとおり。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp: In function ‘int main()’:\nmain.cpp:7:40: error: expected ‘;’ before ‘)’ token\n     std::cout << f(1+(2*3),4-5,6/(7-8))) ;\n                                        ^\n")])])]),s("p",[a._v("さてさっそく読んでみよう。すでに学んだように、GCCのメッセージのフォーマットは以下のとおりだ。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ソースファイル名:行番号:列番号: メッセージの種類: メッセージの内容\n")])])]),s("p",[a._v("これに当てはめると、問題はソースファイル"),s("code",[a._v("main.cpp")]),a._v("の7行目の40列目にある。")]),a._v(" "),s("p",[a._v("エラーメッセージは、「"),s("code",[a._v("';'")]),a._v("がトークン"),s("code",[a._v("')'")]),a._v("の前にあるべき」だ。")]),a._v(" "),s("p",[a._v("トークン(token)というのは"),s("code",[a._v("'std'")]),a._v("とか"),s("code",[a._v("'::'")]),a._v("とか"),s("code",[a._v("'cout'")]),a._v("といったソースファイルの空白文字で区切られた最小の文字列の単位のことだ。")]),a._v(" "),s("p",[a._v("抜粋されたソースコードに示された問題の箇所、つまり7行目40列目にあるトークンは"),s("code",[a._v("')'")]),a._v("だ。この前に"),s("code",[a._v("';'")]),a._v("が必要とはどういうことだろう。")]),a._v(" "),s("p",[a._v("問題を探るため、7行目のトークンを詳しく分解してみよう。以下は7行目と同じソースコードだが、トークンをわかりやすく分解してある。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("std::cout << // 標準出力\nf // 関数名\n    ( // 開き括弧\n        1+(2*3),    // 第1引数\n        4-5,        // 第2引数\n        6/(7-8)     // 第3引数\n    ) // 開き括弧に対応する閉じ括弧\n    ) // ???\n    ; // 終端文字\n")])])]),s("p",[a._v("これを見ると、閉じ括弧が1つ多いことがわかる。")]),a._v(" "),s("h2",{attrs:{id:"意味エラー"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意味エラー"}},[a._v("#")]),a._v(" 意味エラー")]),a._v(" "),s("p",[a._v("意味エラーとは、ソースファイルは文法的に正しいが、意味的に間違っているコンパイルエラーのことだ。")]),a._v(" "),s("p",[a._v("さっそく例を見ていこう。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("auto")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このコードをコンパイルすると出力されるエラーメッセージは以下のとおり。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp: In function ‘int main()’:\nmain.cpp:3:18: error: invalid operands of types ‘double’ and ‘double’ to binary ‘operator%’\n     auto x = 1.0 % 1.0 ;\n              ~~~~^~~~~\n")])])]),s("p",[a._v("問題の箇所は3行目の18列目、"),s("code",[a._v("'%'")]),a._v("だ。")]),a._v(" "),s("p",[a._v("エラーメッセージは、「二項 "),s("code",[a._v("'operator%'")]),a._v("に対して不適切なオペランドである型"),s("code",[a._v("'double'")]),a._v("と"),s("code",[a._v("'double'")]),a._v("」とある。")]),a._v(" "),s("p",[a._v("前の章を読み直すとわかるとおり、"),s("code",[a._v("operator %")]),a._v("は剰余を計算する演算子だが、この演算子には"),s("code",[a._v("double")]),a._v("型を渡すことはできない。")]),a._v(" "),s("p",[a._v("このコードはどうだろう。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 引数を1つ取る関数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 引数を2つ渡す")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このようなエラーメッセージになる。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("main.cpp: In function ‘int main()’:\nmain.cpp:7:13: error: too many arguments to function ‘void f(int)’\n     f( 1, 2 ) ;\n             ^\nmain.cpp:2:6: note: declared here\n void f( int x ) { }\n      ^\n")])])]),s("p",[a._v("問題の箇所は7行目。「関数"),s("code",[a._v("'void f(int)'")]),a._v("に対して実引数が多すぎる」とある。"),s("code",[a._v("関数f")]),a._v("は引数を1つしか取らないのに、2つの引数を渡しているのがエラーの原因だ。")]),a._v(" "),s("p",[a._v("2つ目のメッセージはエラーではなくて、エラーを補足説明するための注記(note)メッセージだ。ここで言及している"),s("code",[a._v("関数f")]),a._v("とは、2行目に宣言されていることを説明してくれている。")]),a._v(" "),s("p",[a._v("意味エラーはときとしておぞましいほどのエラーメッセージを生成することがある。例えば以下の一見無害そうなコードだ。")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello"')]),a._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("このコードは文法的に正しいが、意味的に間違っているコードだ。このコードをコンパイルすると膨大なエラーメッセージが出力される。しかも問題の行番号特定以外、大して役に立たない。")]),a._v(" "),s("h2",{attrs:{id:"コンパイラーのバグ"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#コンパイラーのバグ"}},[a._v("#")]),a._v(" コンパイラーのバグ")]),a._v(" "),s("p",[a._v("C++コンパイラーもソフトウェアであり、バグがある。コンパイラーにバグがある場合、正しいC++のソースファイルがコンパイルできないことがある。")]),a._v(" "),s("p",[a._v("読者がそのようなコンパイラーの秘孔を突くコードを書くことはまれだ。しかし、もしそのようなコードを偶然にも書いてしまった場合、GCCは、")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("gcc: internal compiler error: エラー内容\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <ドキュメントへのファイルパス> for instructions.\n")])])]),s("p",[a._v("のようなメッセージを出力する。")]),a._v(" "),s("p",[a._v("これはGCCのバグなので、見つけた読者は適切な方法でバグ報告をしよう。")])])}),[],!1,null,null,null);t.default=e.exports}}]);